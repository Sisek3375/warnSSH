#!/bin/bash

user1=$(whoami)
source /home/$user1/.warnssh_env

notify-send "‚ö° warnSSH est activ√© !"
echo "warnSSH est activ√©, faites Ctrl+C pour arr√™ter le scan du port SSH"

log_file="$HOME/warnssh.log"
touch $log_file

# Phase d'extraction
extract_info() {
  
  # Extraction de la date et heure
  datetime=$(echo "$line" | grep -oP '^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}')
  
  # Extraction de l'utilisateur
  if [[ "$line" == *"for "* ]]; then
    user=$(echo "$line" | grep -oP 'for \K\w+')
  elif [[ "$line" == *"user "* ]]; then
    user=$(echo "$line" | grep -oP 'user \K[^(]+' | tr -d ' ')
  elif [[ "$line" == *"ruser="* ]]; then
    user=$(echo "$line" | grep -oP 'ruser=\K[^ ]+')
  fi
  
  # Extraction de l'IP
  if [[ "$line" == *"from "* ]]; then
    ip=$(echo "$line" | grep -oP 'from \K[0-9.]+')
  elif [[ "$line" == *"rhost="* ]]; then
    ip=$(echo "$line" | grep -oP 'rhost=\K[^ ]+')
  fi
 
  # Formatage de la date
  if [[ -n "$datetime" ]]; then
    formatted_date=$(date -d "$datetime" "+%d/%m/%Y %H:%M:%S")
  else
    formatted_date="Date inconnue"
  fi
  
  # Construction de base_info
  base_info="üïí $formatted_date"
  [[ -n "$ip" ]] && base_info="$base_info\nüåê IP: $ip"
  [[ -n "$user" ]] && base_info="$base_info\nüë§ User: $user"
  
  echo "$base_info"
}

# Phase de parsing
tail -f -n 0 /var/log/auth.log | while read line; do
  if [[ "$line" == *"sshd"* ]]; then
    # Extraction des informations communes
    base_info=$(extract_info "$line")
    
    # Switch case
    case "$line" in
        *"Accepted password"*|*"Accepted publickey"*)
            notify-send "‚úÖ Connexion SSH r√©ussie" "$base_info\nüìã Statut: Authentification r√©ussie"
            echo "$(date "+%d/%m/%Y %H:%M:%S") | Connexion SSH r√©ussie" >> $log_file
            echo -e "Connexion SSH r√©ussie avec ces informations :\n$base_info" | mail -s "WarnSSH - Connexion r√©ussie ! ‚úÖ" $email
	    ;;
        *"Failed password"*)
            notify-send "‚ùå √âchec d'authentification SSH" "$base_info\nüìã Statut: Mot de passe incorrect" 
            echo "$(date "+%d/%m/%Y %H:%M:%S") | √âchec d'authentification SSH" >> $log_file
            echo -e "Connexion SSH √©chou√©e, le mot de passe est incorrect.\nVoici ces informations :\n$base_info" | mail -s "WarnSSH - √âchec d'authentification SSH ‚ùå" $email
            ;;
        *"Invalid user"*)
            notify-send "‚ö†Ô∏è Tentative avec utilisateur invalide" "$base_info\nüìã Statut: Utilisateur inexistant"
            echo "$(date "+%d/%m/%Y %H:%M:%S") | Tentative avec utilisateur invalide" >> $log_file
            echo -e "Tentative avec un nom d'utilisateur invalide. Voici ces informations :\n$base_info" | mail -s "WarnSSH - Tentative avec utilisateur invalide ‚ö†Ô∏è " $email
	    ;;
        *"Did not receive identification string"*)
            notify-send "üö´ Connexion SSH abandonn√©e" "$base_info\nüìã Statut: Identification √©chou√©e"
            echo "$(date "+%d/%m/%Y %H:%M:%S") | Connexion SSH abandonn√©e" >> $log_file
            echo -e "Une connexion SSH a √©t√© abandonn√©e. Voici ces informations :\n$base_info" | mail -s "WarnSSH - Connexion SSH abandonn√©e üö´" $email
	    ;;
        *"Connection from"*"closed"*)
            notify-send "üîí Connexion SSH ferm√©e" "$base_info\nüìã Statut: Connexion interrompue"
            echo "$(date "+%d/%m/%Y %H:%M:%S") | Connexion SSH ferm√©e" >> $log_file
            echo -e "La connexion SSH a √©t√© ferm√©e. Voici ces informations :\n$base_info" | mail -s "WarnSSH - Connexion SSH ferm√©e üîí" $email
            ;;
        *"Received disconnect"*)
            notify-send "üì° D√©connexion SSH" "$base_info\nüìã Statut: Client d√©connect√©"
            echo "$(date "+%d/%m/%Y %H:%M:%S") | D√©connexion SSH" >> $log_file
            echo -e "Une d√©connexion SSH a √©t√© d√©t√©ct√©e. Voici ces informations :\n$base_info" | mail -s "WarnSSH - D√©connexion SSH d√©t√©ct√©e üîí" $email
	    ;;
    esac
  fi
done
